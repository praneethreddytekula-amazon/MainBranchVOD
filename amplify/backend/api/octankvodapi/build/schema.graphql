type VodAsset {
  id: ID!
  title: String!
  description: String!
  video: VideoObject
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

type VideoObject {
  id: ID!
  createdAt: AWSDateTime!
  updatedAt: AWSDateTime!
}

enum ModelSortDirection {
  ASC
  DESC
}

type ModelVodAssetConnection {
  items: [VodAsset]
  nextToken: String
}

input ModelStringInput {
  ne: String
  eq: String
  le: String
  lt: String
  ge: String
  gt: String
  contains: String
  notContains: String
  between: [String]
  beginsWith: String
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIDInput {
  ne: ID
  eq: ID
  le: ID
  lt: ID
  ge: ID
  gt: ID
  contains: ID
  notContains: ID
  between: [ID]
  beginsWith: ID
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
  size: ModelSizeInput
}

input ModelIntInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelFloatInput {
  ne: Float
  eq: Float
  le: Float
  lt: Float
  ge: Float
  gt: Float
  between: [Float]
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelBooleanInput {
  ne: Boolean
  eq: Boolean
  attributeExists: Boolean
  attributeType: ModelAttributeTypes
}

input ModelSizeInput {
  ne: Int
  eq: Int
  le: Int
  lt: Int
  ge: Int
  gt: Int
  between: [Int]
}

input ModelVodAssetFilterInput {
  id: ModelIDInput
  title: ModelStringInput
  description: ModelStringInput
  and: [ModelVodAssetFilterInput]
  or: [ModelVodAssetFilterInput]
  not: ModelVodAssetFilterInput
}

enum ModelAttributeTypes {
  binary
  binarySet
  bool
  list
  map
  number
  numberSet
  string
  stringSet
  _null
}

type Query {
  getVodAsset(id: ID!): VodAsset
  listVodAssets(filter: ModelVodAssetFilterInput, limit: Int, nextToken: String): ModelVodAssetConnection
  getVideoObject(id: ID!): VideoObject
  listVideoObjects(filter: ModelVideoObjectFilterInput, limit: Int, nextToken: String): ModelVideoObjectConnection
  searchVodAssets(filter: SearchableVodAssetFilterInput, sort: SearchableVodAssetSortInput, limit: Int, nextToken: String, from: Int): SearchableVodAssetConnection
}

input CreateVodAssetInput {
  id: ID
  title: String!
  description: String!
  vodAssetVideoId: ID
}

input UpdateVodAssetInput {
  id: ID!
  title: String
  description: String
  vodAssetVideoId: ID
}

input DeleteVodAssetInput {
  id: ID!
}

type Mutation {
  createVodAsset(input: CreateVodAssetInput!, condition: ModelVodAssetConditionInput): VodAsset
  updateVodAsset(input: UpdateVodAssetInput!, condition: ModelVodAssetConditionInput): VodAsset
  deleteVodAsset(input: DeleteVodAssetInput!, condition: ModelVodAssetConditionInput): VodAsset
  createVideoObject(input: CreateVideoObjectInput!, condition: ModelVideoObjectConditionInput): VideoObject
  updateVideoObject(input: UpdateVideoObjectInput!, condition: ModelVideoObjectConditionInput): VideoObject
  deleteVideoObject(input: DeleteVideoObjectInput!, condition: ModelVideoObjectConditionInput): VideoObject
}

input ModelVodAssetConditionInput {
  title: ModelStringInput
  description: ModelStringInput
  and: [ModelVodAssetConditionInput]
  or: [ModelVodAssetConditionInput]
  not: ModelVodAssetConditionInput
}

type Subscription {
  onCreateVodAsset: VodAsset @aws_subscribe(mutations: ["createVodAsset"])
  onUpdateVodAsset: VodAsset @aws_subscribe(mutations: ["updateVodAsset"])
  onDeleteVodAsset: VodAsset @aws_subscribe(mutations: ["deleteVodAsset"])
  onCreateVideoObject: VideoObject @aws_subscribe(mutations: ["createVideoObject"])
  onUpdateVideoObject: VideoObject @aws_subscribe(mutations: ["updateVideoObject"])
  onDeleteVideoObject: VideoObject @aws_subscribe(mutations: ["deleteVideoObject"])
}

type ModelVideoObjectConnection {
  items: [VideoObject]
  nextToken: String
}

input ModelVideoObjectFilterInput {
  id: ModelIDInput
  and: [ModelVideoObjectFilterInput]
  or: [ModelVideoObjectFilterInput]
  not: ModelVideoObjectFilterInput
}

input CreateVideoObjectInput {
  id: ID
}

input UpdateVideoObjectInput {
  id: ID!
}

input DeleteVideoObjectInput {
  id: ID!
}

input ModelVideoObjectConditionInput {
  and: [ModelVideoObjectConditionInput]
  or: [ModelVideoObjectConditionInput]
  not: ModelVideoObjectConditionInput
}

input SearchableStringFilterInput {
  ne: String
  gt: String
  lt: String
  gte: String
  lte: String
  eq: String
  match: String
  matchPhrase: String
  matchPhrasePrefix: String
  multiMatch: String
  exists: Boolean
  wildcard: String
  regexp: String
  range: [String]
}

input SearchableIntFilterInput {
  ne: Int
  gt: Int
  lt: Int
  gte: Int
  lte: Int
  eq: Int
  range: [Int]
}

input SearchableFloatFilterInput {
  ne: Float
  gt: Float
  lt: Float
  gte: Float
  lte: Float
  eq: Float
  range: [Float]
}

input SearchableBooleanFilterInput {
  eq: Boolean
  ne: Boolean
}

input SearchableIDFilterInput {
  ne: ID
  gt: ID
  lt: ID
  gte: ID
  lte: ID
  eq: ID
  match: ID
  matchPhrase: ID
  matchPhrasePrefix: ID
  multiMatch: ID
  exists: Boolean
  wildcard: ID
  regexp: ID
  range: [ID]
}

input SearchableVodAssetFilterInput {
  id: SearchableIDFilterInput
  title: SearchableStringFilterInput
  description: SearchableStringFilterInput
  and: [SearchableVodAssetFilterInput]
  or: [SearchableVodAssetFilterInput]
  not: SearchableVodAssetFilterInput
}

enum SearchableSortDirection {
  asc
  desc
}

enum SearchableVodAssetSortableFields {
  id
  title
  description
}

input SearchableVodAssetSortInput {
  field: SearchableVodAssetSortableFields
  direction: SearchableSortDirection
}

type SearchableVodAssetConnection {
  items: [VodAsset]
  nextToken: String
  total: Int
}
